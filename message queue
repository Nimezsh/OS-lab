// Sender
#include <stdio.h>
#include <sys/ipc.h>
#include <sys/msg.h>
#include <string.h>

// Define message structure
struct msg_buffer {
    long msg_type;
    char msg_text[100];
};

int main() {
    key_t key;
    int msgid;

    // 1. Generate unique key
    key = ftok("progfile", 65);

    // 2. Create message queue
    msgid = msgget(key, 0666 | IPC_CREAT);

    struct msg_buffer message;
    message.msg_type = 1; // message type must be >0

    printf("Enter message to send: ");
    fgets(message.msg_text, sizeof(message.msg_text), stdin);

    // 3. Send message
    msgsnd(msgid, &message, sizeof(message.msg_text), 0);

    printf("Message sent: %s\n", message.msg_text);

    return 0;
}

// Reciever
#include <stdio.h>
#include <sys/ipc.h>
#include <sys/msg.h>

// Define message structure
struct msg_buffer {
    long msg_type;
    char msg_text[100];
};

int main() {
    key_t key;
    int msgid;

    // 1. Generate the same key
    key = ftok("progfile", 65);

    // 2. Access the message queue
    msgid = msgget(key, 0666 | IPC_CREAT);

    struct msg_buffer message;

    // 3. Receive message of type 1
    msgrcv(msgid, &message, sizeof(message.msg_text), 1, 0);

    printf("Message received: %s\n", message.msg_text);

    // 4. Destroy the message queue
    msgctl(msgid, IPC_RMID, NULL);

    return 0;
}
